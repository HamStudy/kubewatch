apiVersion: kubewatch.io/v1
kind: ResourceDefinition
metadata:
  name: secret
  description: Kubernetes Secret resource
  icon: 
spec:
  # Kubernetes API information
  kubernetes:
    group: ""  # core API group
    version: v1
    kind: Secret
    plural: secrets
    namespaced: true
    
  # Column definitions for table display
  columns:
    - name: NAME
      width: 30
      priority: 1
      template: "{{ .metadata.name }}"
      sortable: true
      
    - name: NAMESPACE
      width: 20
      priority: 2
      condition: "showNamespace"
      template: |
        {{- if hasPrefix .metadata.namespace "kube-" -}}
          {{- color "blue" .metadata.namespace -}}
        {{- else if eq .metadata.namespace "default" -}}
          {{- color "gray" .metadata.namespace -}}
        {{- else -}}
          {{- .metadata.namespace -}}
        {{- end -}}
      sortable: true
      
    - name: TYPE
      width: 25
      priority: 1
      template: |
        {{- $type := .type | default "Opaque" -}}
        {{- if eq $type "Opaque" -}}
          {{- color "green" "Opaque" -}}
        {{- else if eq $type "kubernetes.io/service-account-token" -}}
          {{- color "blue" "ServiceAccount" -}}
        {{- else if eq $type "kubernetes.io/dockerconfigjson" -}}
          {{- color "cyan" "DockerConfig" -}}
        {{- else if eq $type "kubernetes.io/dockercfg" -}}
          {{- color "cyan" "DockerCfg" -}}
        {{- else if eq $type "kubernetes.io/basic-auth" -}}
          {{- color "yellow" "BasicAuth" -}}
        {{- else if eq $type "kubernetes.io/ssh-auth" -}}
          {{- color "magenta" "SSHAuth" -}}
        {{- else if eq $type "kubernetes.io/tls" -}}
          {{- color "red" "TLS" -}}
        {{- else if hasPrefix $type "bootstrap.kubernetes.io/" -}}
          {{- color "blue" "Bootstrap" -}}
        {{- else -}}
          {{- /* Shorten long type names */ -}}
          {{- if contains "/" $type -}}
            {{- $parts := split "/" $type -}}
            {{- if gt (len $parts) 1 -}}
              {{- $lastPart := index $parts (sub (len $parts) 1) -}}
              {{- color "gray" $lastPart -}}
            {{- else -}}
              {{- color "gray" $type -}}
            {{- end -}}
          {{- else -}}
            {{- color "gray" $type -}}
          {{- end -}}
        {{- end -}}
      sortable: true
      
    - name: DATA
      width: 10
      priority: 1
      align: center
      template: |
        {{- $dataCount := 0 -}}
        {{- if .data -}}
          {{- $dataCount = len .data -}}
        {{- end -}}
        
        {{- if eq $dataCount 0 -}}
          {{- color "gray" "0" -}}
        {{- else if eq $dataCount 1 -}}
          {{- color "green" "1" -}}
        {{- else if lt $dataCount 5 -}}
          {{- color "yellow" (toString $dataCount) -}}
        {{- else -}}
          {{- color "cyan" (toString $dataCount) -}}
        {{- end -}}
      sortable: true
      sortKey: "dataCount"
      
    - name: AGE
      width: 10
      priority: 1
      template: |
        {{- $age := .metadata.creationTimestamp | ago -}}
        {{- $ageSeconds := .metadata.creationTimestamp | ageInSeconds -}}
        
        {{- if lt $ageSeconds 300 -}}
          {{- color "cyan" $age -}}
        {{- else if lt $ageSeconds 3600 -}}
          {{- color "green" $age -}}
        {{- else if lt $ageSeconds 86400 -}}
          {{- color "white" $age -}}
        {{- else -}}
          {{- color "gray" $age -}}
        {{- end -}}
      sortable: true
      sortKey: "creationTimestamp"
      
    - name: KEYS
      width: 40
      priority: 2
      template: |
        {{- $keys := list -}}
        {{- range $key, $_ := .data -}}
          {{- $keys = append $keys $key -}}
        {{- end -}}
        
        {{- if $keys -}}
          {{- /* Special handling for common secret types */ -}}
          {{- if eq .type "kubernetes.io/tls" -}}
            {{- color "red" "üîê tls.crt, tls.key" -}}
          {{- else if eq .type "kubernetes.io/dockerconfigjson" -}}
            {{- color "cyan" "üê≥ .dockerconfigjson" -}}
          {{- else if eq .type "kubernetes.io/basic-auth" -}}
            {{- color "yellow" "üîë username, password" -}}
          {{- else if eq .type "kubernetes.io/ssh-auth" -}}
            {{- color "magenta" "üîë ssh-privatekey" -}}
          {{- else -}}
            {{- if gt (len $keys) 4 -}}
              {{- printf "%s... (%d keys)" (join (slice $keys 0 4) ", ") (len $keys) -}}
            {{- else -}}
              {{- join $keys ", " -}}
            {{- end -}}
          {{- end -}}
        {{- else -}}
          {{- color "gray" "<no data>" -}}
        {{- end -}}
      sortable: false
      
    - name: LABELS
      width: 30
      priority: 3
      template: |
        {{- $labels := list -}}
        {{- range $key, $value := .metadata.labels -}}
          {{- if not (or (hasPrefix $key "kubectl.kubernetes.io") (hasPrefix $key "kubernetes.io")) -}}
            {{- $labels = append $labels (printf "%s=%s" $key $value) -}}
          {{- end -}}
        {{- end -}}
        {{- if $labels -}}
          {{- if gt (len $labels) 2 -}}
            {{- printf "%s..." (join (slice $labels 0 2) ",") -}}
          {{- else -}}
            {{- join $labels "," -}}
          {{- end -}}
        {{- else -}}
          {{- color "gray" "<none>" -}}
        {{- end -}}
      sortable: false
      
  # Operations available for this resource
  operations:
    - name: describe
      key: "d"
      description: "Describe secret"
      command: "kubectl describe secret {{ .metadata.name }} -n {{ .metadata.namespace }}"
      
    - name: decode
      key: "D"
      description: "Decode secret data"
      command: "kubectl get secret {{ .metadata.name }} -n {{ .metadata.namespace }} -o jsonpath='{.data}' | jq -r 'to_entries[] | \"\\(.key): \\(.value | @base64d)\"'"
      requiresAuth: true
      
    - name: edit
      key: "E"
      description: "Edit secret"
      command: "kubectl edit secret {{ .metadata.name }} -n {{ .metadata.namespace }}"
      requiresAuth: true
      
    - name: delete
      key: "x"
      description: "Delete secret"
      confirm: true
      confirmMessage: "Delete secret {{ .metadata.name }}? This may break applications using it!"
      command: "kubectl delete secret {{ .metadata.name }} -n {{ .metadata.namespace }}"
      
    - name: export
      key: "X"
      description: "Export secret to file"
      command: "kubectl get secret {{ .metadata.name }} -n {{ .metadata.namespace }} -o yaml > {{ .metadata.name }}-secret.yaml"
      requiresAuth: true
      
  # Grouping configuration
  grouping:
    enabled: true
    groupBy:
      - field: ".type"
        name: "Secret Type"
        icon: "üîê"
      - field: ".metadata.labels.app"
        name: "Application"
        icon: "üì¶"
    aggregations:
      - column: "DATA"
        function: "sum"
        format: "{{ . }} total keys"
        
  # Filtering options
  filters:
    - name: "Opaque Only"
      key: "o"
      condition: '.type == "Opaque" or .type == null'
    - name: "TLS Certificates"
      key: "t"
      condition: '.type == "kubernetes.io/tls"'
    - name: "Docker Config"
      key: "d"
      condition: |
        {{- or (eq .type "kubernetes.io/dockerconfigjson") (eq .type "kubernetes.io/dockercfg") -}}
    - name: "Service Account"
      key: "s"
      condition: '.type == "kubernetes.io/service-account-token"'
    - name: "Auth Secrets"
      key: "a"
      condition: |
        {{- or (eq .type "kubernetes.io/basic-auth") (eq .type "kubernetes.io/ssh-auth") -}}